{"version":3,"sources":["rex.js","helpers/always/always.js","helpers/add/add.js","helpers/concat/concat.js","helpers/contains/contains.js","helpers/apply/apply.js","helpers/cond/cond.js","helpers/equals/equals.js","helpers/f/f.js","helpers/t/t.js","helpers/guid/guid.js","services/radio/emit.js","services/radio/handlers.js","services/radio/proxy.js","services/radio/radio.js","services/storage/drop.js","services/storage/get.js","services/storage/remove.js","services/storage/set.js","services/storage/storage.js","wrappers/arity/arity.js","wrappers/atom/atom.js","wrappers/atom/attached.js","wrappers/atom/change.js","wrappers/atom/component.js","wrappers/atom/created.js","wrappers/atom/detached.js","wrappers/atom/event.js","wrappers/curry/_.js","wrappers/curry/completed.js","wrappers/curry/curry.js","wrappers/curry/mapper.js","wrappers/curry/template.js","wrappers/overload/overload.js","wrappers/flip/flip.js","wrappers/hook/after.js","wrappers/hook/before.js","wrappers/hook/hook.js","wrappers/memoize/decorate.js","wrappers/memoize/memoize.js","wrappers/memoize/wrapper.js","wrappers/partial/partial.js"],"names":["modules","proxy","_extends","window","Rex","nameOrModule","module","push","onload","forEach","Proxy","@","get","target","name","receiver","value","R","curry","a","b","_ref","concat","apply","arguments","test","length","undefined","_","indexOf","_len","args","Array","_key","chain","index","_chain$index","_chain$index2","Math","round","Date","now","random","toString","radio","handlers","emit","channel","_iterator","entries","_isArray","isArray","_i","Symbol","iterator","_ref4","next","done","_ref2","_ref3","_slicedToArray","context","_iterator2","_isArray2","_i2","_ref5","JSON","parse","stringify","this","Map","set","Set","drop","clear","off","delete","on","add","storage","localStorage","key","defaultValue","getItem","remove","removeItem","setItem","Object","prototype","call","0","1","2","3","c","4","d","atom","hook","attached","prop","descriptor","hookCallback","setImmediate","bind","after","contains","change","properties","oldValue","newValue","before","component","tagName","extending","document","registerElement","_defineProperty","create","HTMLElement","created","detached","event","query","bubbling","action","e","matches","hookCreatedCallback","addEventListener","hookDetachedCallback","removeEventListener","guid","feed","completed","mapper","template","partial","map","item","split","taraget","overrid","method","predicate","_toConsumableArray","reverse","always","memoize","flip","decorate","wrapper","_len2","_key2"],"mappings":"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","file":"rex.min.js","sourcesContent":["(function (modules, proxy) {\n\n  /**\n   * Extendo o objeto window, com o modulo 'Rex' e subscrevo\n   * o evento onload\n   */\n  Object.assign(window, {\n\n    /**\n     * Principal Funcao responsavel por registrar e consumir\n     * Modulos, utilizando-se da sobrecarga\n     */\n    Rex(nameOrModule, module) {\n      module ? (proxy[nameOrModule] = module) : modules.push(nameOrModule);\n    },\n\n    /**\n     * Inicializacao dos Modulos aguarda o evento onload, permitindo\n     * hoisting dos Modulos registrado\n     */\n    onload() {\n      modules.forEach(module => module(proxy));\n    }\n\n  });\n\n/**\n * Inicializa o Modulo passando como parametro, um Array Literal e\n * um Proxy que faz todo o trabalho de Injecao de Dependencia\n */\n})([], new Proxy({ '@': {} }, {\n  \n  /**\n   * Intermedeia as chamadas dos Modulos, memoizando o retorno da Funcao\n   * construtora\n   */\n  get(target, name, receiver) {\n    return target['@'][name] || (target['@'][name] = target[name](receiver));\n  }\n  \n}));","Rex('always', () =>\n\n  /**\n   * Retorna uma função que retorna o objeto\n   * inicialmente fornecido\n   */\n  (value) =>\n    () => value);","Rex('add', (R) =>\n\n  /**\n   * Soma dois valores, convertendo valores nao\n   * numerico\n   */\n  R.curry((a, b) => ~~a + ~~b));","Rex('concat', () =>\n\n  /**\n   * Concatena dois array retornando uma\n   * nova instancia\n   */\n  (...args) =>\n    [].concat(...args));","Rex('contains', (R) =>\n\n  /**\n   * Este modulo verifica a existencia de um valor\n   * dentro de uma colecao\n   */\n  R.curry((value, target = R._) =>\n    !/\\-1/.test(target.indexOf(value))));","Rex('apply', () =>\n\n  /**\n   * Aplica a uma funcao o conjunto de parametros\n   */\n  (target, ...args) =>\n    target.apply(void 0, args));","Rex('cond', function () {\n\n  /**\n   * Como uma cadeia de responsabilidade, passando consjuntos de predicado\n   * verificador e um predicado de resposata\n   */\n  return function (...chain) {\n    return function (...args) {\n\n      /**\n       * Anda pelas cadeias ate encontrar uma cadeia\n       * que se identifique\n       */\n      for (let index in chain) {\n        if (chain[index][0](...args)) return chain[index][1](...args);\n      }\n\n    };\n  };\n\n});","Rex('equals', (R) =>\n\n  /**\n   * Compara se dois valores sao iguais\n   */\n  R.curry((a, b) => a == b));","Rex('f', () =>\n\n  /**\n   * Sempre retorna false;\n   */\n  () => !1);","Rex('t', () =>\n\n  /**\n   * Sempre retorna true\n   */\n  () => !0);","Rex('guid', () =>\n\n  /**\n   * Este module cria um valor unico a todo momento que\n   * for chamado\n   */\n  () =>\n    Math.round(Date.now() * Math.random()).toString(36));","Rex(function ({ radio, ['radio.handlers']: handlers }) {\n\n  /**\n   * Estende a class radio com o metodo statico emit\n   */\n  Object.assign(radio, {\n\n    /**\n     * Emite uma transmissao em um canal especifico, para todos os contextos, repassando\n     * uma copia do que foi passado na transmissao\n     */\n    emit(channel, ...args) {\n      for (let [context, proxy] of handlers.entries())\n        for (let target of proxy[channel]) target.apply(context, JSON.parse(JSON.stringify(args)));\n      return this;\n    }\n\n  });\n\n});","Rex('radio.handlers', () =>\n\n  /**\n   * Mapa para guardar todos os contexto, que deposi sera muito\n   * facil para realizar o metodo drop\n   */\n  new Map);","Rex('radio.proxy', function ({ ['radio.handlers']: handlers }) {\n\n  /**\n   * Conjultando o contexto com um Proxy, quey ira armazenar os\n   * canais\n   */\n  return function (context) {\n    handlers.set(context, new Proxy({}, {\n\n      /**\n       * Se um canal ainda nao existir, sera criado o canal e atribuido\n       * um novo Set\n       */\n      get(target, name) {\n        return target[name] || (target[name] = new Set);\n      }\n\n    }));\n  };\n\n});","Rex('radio', function ({ ['radio.handlers']: handlers, ['radio.proxy']: proxy }) {\n\n  /**\n   * Uma classe da forma tradicionar, desta forna nao sera\n   * preciso do operado new para instanciar\n   */\n  return function radio(context) {\n\n    /**\n     * Para utilizarmos o new em todas as refencias, forço de\n     * forma transparente a criacao de uma nova instancia\n     */\n    if (!(this instanceof radio)) {\n      return new radio(context);\n    }\n\n    /**\n     * Conjultando o contexto com um Proxy, quey ira armazenar os\n     * canais\n     */\n    proxy(context);\n\n    /**\n     * Desliga todas as escultas\n     */\n    function drop() {\n      return handlers.get(context).clear(), this;\n    }\n\n    /**\n     * Localiza dentro do Map o canal pelo contexto conjulgado\n     */\n    function get(channel) {\n      return handlers.get(context)[channel];\n    }\n\n    /**\n     * Desliga a esculta de uma transmissao especifica\n     */\n    function off(channel, target) {\n      return get(channel).delete(target), this;\n    }\n\n    /**\n     * Liga a esculta para uma transmissao especifica\n     */\n    function on(channel, target) {\n      return get(channel).add(target), this;\n    }\n\n    /**\n     * Pattern revelation\n     */\n    return { drop, off, on };\n\n  };\n\n});","Rex(function ({ storage }) {\n\n  /**\n   * Extensao do modulo Storage, incluindo o metodo drop que limpa\n   * todas as chaves com seu valores\n   */\n  Object.assign(storage, {\n    drop() {\n\n      /**\n       * Limpa as chaves -> valores, posteriormente retornando o\n       * proprio objeto Storage\n       */\n      return localStorage.clear(), storage;\n\n    }\n  });\n\n});","Rex(function ({ storage }) {\n\n  /**\n   * Extensao do modulo Storage, incluindo o metodo get devolve o valor\n   * pela chave fornecido\n   */\n  Object.assign(storage, {\n    get(key, defaultValue = null) {\n\n      /**\n       * Parseia o valor caso ele seja um Objeto ou uma Colecao, caso contrario\n       * devolve o proprio valor, por padrao o valor sera uma Literal\n       */\n      function parse(value) {\n        return /^(\\{|\\[).+(\\]|\\})$/.test(value) ? JSON.parse(value) : value;\n      }\n\n      /**\n       * Devolve o valor referente a chave que fora passado, caso nao\n       * encontrado o valor devolve o valor padrao\n       */\n      return parse(localStorage.getItem(key)) || defaultValue;\n\n    }\n  });\n\n});","Rex(function ({ storage }) {\n\n  /**\n   * Extensao do modulo Storage, incluindo o metodo remove a chave\n   */\n  Object.assign(storage, {\n    remove(key) {\n\n      /**\n       * Exlusao da chave e devolve a referencia do Storage\n       */\n      return localStorage.removeItem(key), storage;\n\n    }\n  });\n\n});","Rex(function ({ storage }) {\n\n  /**\n   * Extensao do modulo Storage, incluindo o metodo set cria e/ou altera o valor\n   * pela chave forcecia\n   */\n  Object.assign(storage, {\n    set(key, value = null) {\n\n      /**\n       * Verifica se o valor fornecido é um Objeto ou Array, para executar\n       * o parse para Literal antes de ser armazenado evitando erros ou referencia\n       */\n      function is(value) {\n        return /(object|array)\\]$/i.test(Object.prototype.toString.call(value));\n      }\n\n      /**\n       * Cria e/ou altera o valor da chave e devolve a referencia do Storage\n       */\n      return localStorage.setItem(key, is(value) ? JSON.stringify(value) : value), storage;\n\n    }\n  });\n\n});","Rex('storage', () =>\n\n  /**\n   * Um micro Base de Dados com persistencia de sessao, que trabalha\n   * com chave -> valor\n   */\n  ({}));","Rex('arity', ({ apply, curry }) =>\n\n  /**\n   * Altera a assinatura da quantidades de parametros\n   * que a funcao alvo possui\n   */\n  curry((length, target) =>\n    (...args) =>\n      ({\n          '0': function ()            { return curry(target, ...args); }\n        , '1': function (a)           { return curry(target, ...args); }\n        , '2': function (a, b)        { return curry(target, ...args); }\n        , '3': function (a, b, c)     { return curry(target, ...args); }\n        , '4': function (a, b, c, d)  { return curry(target, ...args); }\n      })[length]));","Rex('atom', () =>\n\n  /**\n   * Modulo com decoradores de classes que auxiliam na criacao do\n   * component customizado\n   */\n  ({}));","Rex(function ({ atom, hook }) {\n\n  /**\n   * Extensao do modulo atom, decorador attached executa um metodo\n   * quando o Web Component for apendado no DOM\n   */\n  Object.assign(atom, {\n    attached(target, prop, descriptor) {\n\n      /**\n       * Hook que executara o metodo apontado no decorador no evento\n       * de attachedCallback\n       */\n      function hookCallback() {\n        setImmediate(this[prop].bind(this));\n      }\n\n      /**\n       * Troca o metodo attachedCallbac pelo hookCallback que fara o \n       * disparo para o metodo apontotado no decorador no momento em que\n       * o Web Component for atachado no DOM\n       */\n      hook.after(target, 'attachedCallback', hookCallback);\n\n      /**\n       * Retorna o descriptor sem nenhuma modificacao\n       */\n      return descriptor;\n\n    }\n  });\n\n});","Rex(function ({ atom, contains, hook }) {\n\n  /**\n   * Extensao do modulo atom, o decorador change notifica o metodo\n   * decorado quando o atributo identificado for alterado\n   */\n  Object.assign(atom, {\n    change(...properties) {\n      return function (target, prop, descriptor) {\n\n        /**\n         * Notifica o metodo que fora decorado, para receber o novo valor da\n         * propriedade alterado\n         */\n        function hookCallback(name, oldValue, newValue) {\n          contains(name, properties) && (this[prop](newValue, oldValue, name));\n        }\n\n        /**\n         * Altera o metodo attributeChangedCallback para incluir o hook, no momento\n         * que este metodo for chamado, sera repassado para o metodo que fora decorado\n         */\n        hook.before(target, 'attributeChangedCallback', hookCallback);\n\n        /**\n         * Retorna o descriptor sem nenhuma modificacao\n         */\n        return descriptor;\n\n      };\n    }\n  });\n\n});","Rex(function ({ atom }) {\n\n  /**\n   * Extensao do modulo atom, o decorador componente cria um componente\n   * como o nome da tag quer fora passado\n   */\n\tObject.assign(atom, {\n    component(tagName, extending) {\n      return function (target) {\n\n        /**\n         * Cria um novo Web Components customizado, desde que o nome da tag tenha\n         * um hifen e que este nome ja nao foi registrado\n         */\n      \tdocument.registerElement(tagName, {\n          prototype: Object.assign(Object.create(HTMLElement.prototype), target.prototype),\n          [extending ? 'extends' : '']: extending\n        });\n\n      };\n    }\n  });\n\n});","Rex(function ({ atom, hook }) {\n\n  /**\n   * Extensao do modulo atom, funciona com um constructor;\n   * Decorador created executa um metodo quando o Web Component for\n   * criado, antes de ser apendado no DOM\n   */\n  Object.assign(atom, {\n    created(target, prop, descriptor) {\n\n      /**\n       * Hook que executara o metodo apontado no decorador no evento\n       * de createdCallback\n       */\n      function hookCallback() {\n        setImmediate(this[prop].bind(this));\n      }\n\n      /**\n       * Troca o metodo createdCallbac pelo hookCallback que fara o \n       * disparo para o metodo apontotado no decorador no momento em que\n       * o Web Component for criado\n       */\n      hook.after(target, 'createdCallback', hookCallback);\n\n      /**\n       * Retorna o descriptor sem nenhuma modificacao\n       */\n      return descriptor;\n\n    }\n  });\n\n});","Rex(function ({ atom, hook }) {\n\n  /**\n   * Extensao do modulo atom, funciona como um deconstructor;\n   * Decorador detached executa um metodo quando o Web Component\n   * for retirado do DOM\n   */\n  Object.assign(atom, {\n    detached(target, prop, descriptor) {\n\n      /**\n       * Hook que executara o metodo apontado no decorador no evento\n       * de detachedCallback\n       */\n      function hookCallback() {\n        this[prop]();\n      }\n\n      /**\n       * Troca o metodo detachedCallbac pelo hookCallback que fara o \n       * disparo para o metodo apontotado no decorador no momento em que\n       * o Web Component for retirado do DOM\n       */\n      hook.after(target, 'detachedCallback', hookCallback);\n\n      /**\n       * Retorna o descriptor sem nenhuma modificacao\n       */\n      return descriptor;\n\n    }\n  });\n\n});","Rex(function ({ atom, hook }) {\n\n  /**\n   * Extensao do modulo atom, executa os metodo apontoado no decorado que\n   * indica o evento de interesse que atenda a query de selecao\n   */\n  Object.assign(atom, {\n    event(event, query = '*', bubbling) {\n      return function (target, prop, descriptor) {\n\n        /**\n         * Executa o metodo hook quey foi decorado pelo decorador\n         * event\n         */\n        function action(e) {\n          e.target.matches(query) && this[prop](e);\n        }\n\n        /** \n         * Quando o evento createdCallback for disparado, sera adicionado\n         * o evento que fora informado no decorator\n         */\n        function hookCreatedCallback() {\n          this.addEventListener(event, action.bind(this), bubbling);\n        }\n\n        /** \n         * Quando o evento detachedCallback for disparado, sera removido\n         * o evento que fora informado no decorator\n         */\n        function hookDetachedCallback() {\n          this.removeEventListener(event, action.bind(this), bubbling);\n        }\n\n        /**\n         * Adiciona um hook no metodo createdCallbac pelo hookCreatedCallback \n         */\n        hook.after(target, 'createdCallback', hookCreatedCallback);\n\n        /**\n         * Adiciona um hook no metodo detachedCallbac pelo hookDetachedCallback \n         */\n        hook.after(target, 'detachedCallback', hookDetachedCallback);\n\n        /**\n         * Retorna o descriptor sem nenhuma modificacao\n         */\n        return descriptor;\n\n      };\n    }\n  });\n\n});","Rex('_', ({ guid }) =>\n\n  /**\n   * Utilizado para indicar um gap na ordems\n   * dos parametros que estao sendo passados na chamada\n   * da funcao\n   */\n  guid());","Rex('curry.completed', ({ _ }) =>\n\n  /**\n   * Verifica se todos os parametros foram passado\n   * para entao poder executar a funcao predicada\n   */\n  (feed) =>\n    /-1/.test(feed.indexOf(_)));","Rex('curry', ({ ['curry.completed']: completed, ['curry.mapper']: mapper, ['curry.template']: template, partial }) =>\n\n  /**\n   * Retorna uma funcao equivalente que seus argumentos nao necessitan\n   * de ser fornecida uma de cada vez\n   */\n  (target) =>\n    partial(function curry(feed, ...args) {\n      return completed(mapper(feed, args)) ? target(...mapper(feed, args)) : partial(curry, mapper(feed, args)); }, template(target)));","Rex('curry.mapper', ({ _ }) =>\n\n  /**\n   * Mapeia uma colecao, substituindo todos os elementos baseado no index\n   * de sua localizacao pelo seu correspondente\n   */\n  (feed, args, index = 0) =>\n    feed.map(item => (index < args.length && item == _) ? args[index++] : item));","Rex('curry.template', ({ _ }) =>\n\n  /**\n   * Monta um gabarito para mapear os parametros\n   * fornecidos nas chamadas assincronas\n   */\n  (target) =>\n    Array(target.length).toString().split(',').map(() => _));","Rex('overload', function ({ apply }) {\n\n  /**\n   * Modulo olverload é uma sobre carga de metodos, pela\n   * quantidades de paremetros e nao pelo tipo de dados como em\n   * linguagens que com tipagem de dados\n   */\n  return function (taraget, key, overrid) {\n    (function (method) {\n\n      /**\n       * Se a quantidade de items passados em arguments for correspondente\n       * com o tamanho do overrid entao sera executado, caso contrario sera executado\n       * o metodo que fora sobre carregado\n       */\n      Object.assign(taraget, {\n        [key]() {\n          return apply((overrid.length == arguments.length ? overrid : method), arguments);\n        }\n      });\n\n    })(taraget[key]);\n  };\n\n});","Rex('flip', ({ apply }) =>\n\n  /**\n   * Este modulo inverte a ordem dos pararametro e repassando para o\n   * predicate encapsulado\n   */\n  (predicate) =>\n\n    /**\n     * Rece os argumentos atraves do parametro ...args onde sera\n     * frito a inversao desses valores sendo aplicado no predicado\n     */\n    (...args) =>\n      apply(predicate, ...args.reverse()));","Rex(function ({ always, hook, memoize }) {\n\n  /**\n   * Extensao do modulo Hook, inclusao da funcao after, que\n   * executara apos a execao da funcao indicada\n   */\n  Object.assign(hook, {\n    after: function (target, prop, predicate) {\n\n      (function (method) {\n\n        /**\n         * Sobrescreve o predicator horiginal trocando pelo hook, apos a execucao\n         * do predicate horiginal sera passa o retorno para o hook que tambem\n         * devera retornar o valo\n         */\n        Object.assign(target, {\n        \t[prop]() {\n            return predicate.apply(this, method.apply(this, arguments)), method.apply(this, arguments);\n        \t}\n        });\n      \n      /**\n       * Passando como parametro a funcao/metodo que tera o hook, caso\n       * a funcao nao exista sera passado um stub\n       */\n      })(memoize(target[prop] || always()));\n\n      ;\n\n    }\n  });\n\n});","Rex(function ({ hook }) {\n\n  /**\n   * Extensao do modulo Hook, inclusao da funcao before, que\n   * executara apos a execao da funcao indicada\n   */\n  Object.assign(hook, {\n    before: function (target, prop, predicate) {\n\n      (function (method) {\n\n        /**\n         * Sobrescreve o predicator horiginal trocando pelo hook, sera executado\n         * antes que recebera todos os parametros adicionado o predicate horiginal no\n         * final dos argumentos\n         */\n        Object.assign(target, {\n        \t[prop]() {\n            return predicate.apply(this, arguments), method.apply(this, arguments);\n        \t}\n        });\n      \n      /**\n       * Passando como parametro a funcao/metodo que tera o hook, caso\n       * a funcao nao exista sera passado um stub\n       */\n      })(target[prop]);\n\n    }\n  });\n\n});","Rex('hook', () =>\n\n  /**\n   * Hooks que seram executados antes e/ou depois da execucao\n   * da funcao indicada\n   */\n  ({}));","Rex('memoize.decorate', function ({ apply, flip, hook }) {\n\n  /**\n   * Este docorador tem a responsabilidade de cachear o retorno do\n   * metodo, evitando que o metodo horiginal seja executado em chamadas\n   * sequentes\n   */\n  return function (target, key, descriptor) {\n\n    /**\n     * Hook que verifica se o metodo alvo ja fora chamado, retornando\n     * o valor cacheado\n     */\n    function hookCallback(method, ...args) {\n      return this[`@${args}`] || (this[`@${args}`] = apply(method, ...args));\n    }\n\n    /**\n     * Encapsula o metodo horiginal pelo hookCallback\n     */\n    hook.before(descriptor, 'value', flip(hookCallback));\n\n    /**\n     * Retorna o descriptor com o metodo alvo alterado\n     * pela funcao hookCallback\n     */\n    return descriptor;\n    \n  }\n\n});","Rex('memoize', function ({ ['memoize.decorate']: decorate, ['memoize.wrapper']: wrapper }) {\n\n  /**\n   * Cacheia o retorno da funcao/metodo, evitando que a execucao do predicado\n   * seja executado em chamadas futuras\n   */\n  return function () {\n    return { '1': wrapper, '3': decorate }[arguments.length].apply(this, arguments);\n  };\n\n});","Rex('memoize.wrapper', function ({ flip, hook }) {\n\n  /**\n   * Este wrapper tem a responsabilidade de cachear o retorno do\n   * metodo, evitando que o metodo horiginal seja executado em chamadas\n   * sequentes\n   */\n  return function (target) {\n    return function () {\n      return target[`@${arguments}`] || (target[`@${arguments}`] = target.apply(this, arguments));\n    };\n  };\n\n});","Rex('partial', (R) =>\n\n  /**\n   * Aplica os parametros na mesma sequencia, sem a\n   * execucao da funcao\n   */\n  (target, ...a) =>\n    (...b) =>\n      target(...R.concat(a, b)));"]}