{"version":3,"sources":["rex.js"],"names":["modules","proxy","_extends","window","Rex","nameOrModule","module","push","onload","forEach","Proxy","@","get","target","name","receiver"],"mappings":"gLAAA,SAAWA,EAASC,GAMlBC,SAAcC,QAMZC,IANoB,SAMhBC,EAAcC,GAChBA,EAAUL,EAAMI,GAAgBC,EAAUN,EAAQO,KAAKF,IAOzDG,OAdoB,WAelBR,EAAQS,QAAQ,SAAAH,GAAA,MAAUA,GAAOL,YAShC,GAAIS,QAAQC,SAMjBC,IAN4B,SAMxBC,EAAQC,EAAMC,GAChB,MAAOF,GAAO,KAAKC,KAAUD,EAAO,KAAKC,GAAQD,EAAOC,GAAMC","file":"rex.min.js","sourcesContent":["(function (modules, proxy) {\r\n\r\n  /**\r\n   * Extendo o objeto window, com o modulo 'Rex' e subscrevo\r\n   * o evento onload\r\n   */\r\n  Object.assign(window, {\r\n\r\n    /**\r\n     * Principal Funcao responsavel por registrar e consumir\r\n     * Modulos, utilizando-se da sobrecarga\r\n     */\r\n    Rex(nameOrModule, module) {\r\n      module ? (proxy[nameOrModule] = module) : modules.push(nameOrModule);\r\n    },\r\n\r\n    /**\r\n     * Inicializacao dos Modulos aguarda o evento onload, permitindo\r\n     * hoisting dos Modulos registrado\r\n     */\r\n    onload() {\r\n      modules.forEach(module => module(proxy));\r\n    }\r\n\r\n  });\r\n\r\n/**\r\n * Inicializa o Modulo passando como parametro, um Array Literal e\r\n * um Proxy que faz todo o trabalho de Injecao de Dependencia\r\n */\r\n})([], new Proxy({ '@': {} }, {\r\n  \r\n  /**\r\n   * Intermedeia as chamadas dos Modulos, memoizando o retorno da Funcao\r\n   * construtora\r\n   */\r\n  get(target, name, receiver) {\r\n    return target['@'][name] || (target['@'][name] = target[name](receiver));\r\n  }\r\n  \r\n}));"]}