{"version":3,"sources":["helpers/config.js","services/findProductList.js","services/queryString.js","services/topCategories.js","widgets/category/categories.js","widgets/category/category.template.js","widgets/product/product.template.js","widgets/product/producties.js","widgets/product/producties.state.js","widgets/search/search.js","widgets/search/search.state.js"],"names":["Rex","token","program","results","source","url","_ref","config","queryString","_ref2","_ref2$categoryId","categoryId","undefined","_ref2$keyword","keyword","_ref2$results","regeneratorRuntime","async","_context","prev","next","t0","Proxy","t1","awrap","fetch","t2","sent","json","call","t3","t4","t5","@","product","t6","get","target","name","receiver","abrupt","stop","this","createDynamicKey","_slicedToArray","key","value","_extends","_defineProperty","window","location","search","substring","split","reduce","parameter","subCategory","_dec","_dec2","_class","_class2","atom","topCategories","template","component","attached","Categories","_classCallCheck","_createClass","innerHTML","map","join","_applyDecoratedDescriptor","prototype","Object","getOwnPropertyDescriptor","data","replace","id","thumbnail","productname","pricemin","findProductList","state","el","getAttribute","memoize","Search","input","querySelector"],"mappings":"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","file":"benchmark.min.js","sourcesContent":["Rex('config', function () {\r\n\r\n  /**\r\n   * Valores de configuracoes, os valores abaixo reram utilizados\r\n   * pra credenciais com a API do Lomadee\r\n   */\r\n  return {\r\n      'token': '416c4a5242374e457068303d'\r\n    , 'program': 'lomadee'\r\n    , 'results': '24'\r\n    , 'source': '35620700'\r\n    , 'url': 'http://sandbox.buscape.com'\r\n  };\r\n\r\n});","Rex('findProductList', function ({ config, queryString }) {\r\n\r\n  /**\r\n   * Este servico procura todos os produtos, levando em consideracao o Id da\r\n   * categoria, palavras chaves e numero maximo de items por consulta\r\n   */\r\n  return async function ({ categoryId = '', keyword = queryString().keyword, results = config.results }) {\r\n    return new Proxy(\r\n      {\r\n        '@': await (await fetch(`${config.url}/service/findProductList/${config.program}/${config.token}/BR/?categoryId=${categoryId}&format=json&keyword=${keyword}&results=${results}&sourceId=${config.source}`)).json(),\r\n        'product': []\r\n      },\r\n      {\r\n\r\n        /**\r\n         * Quando nao encontrado um valor, sera forcecido o valor padrao\r\n         */\r\n        get(target, name, receiver) {\r\n          return target['@'][name] || target[name];\r\n        }\r\n\r\n      }\r\n    );\r\n  };\r\n\r\n});","Rex('queryString', function () {\r\n\r\n  /**\r\n   * Crian dinamicamente chave e valor\r\n   */\r\n  function createDynamicKey(target, [key, value]) {\r\n    return Object.assign(target, { [key]: value });\r\n  }\r\n\r\n  /**\r\n   * Este servico retorana um JSON de todos os paremetro encontrado\r\n   * na URI\r\n   */\r\n  return function () {\r\n    return new Proxy(\r\n      window.location.search.substring(1).split('&').reduce((target, parameter) => createDynamicKey(target, parameter.split('=')), {}),\r\n      {\r\n\r\n        /**\r\n         * Quando nao encontrado um valor, sera forcecido o valor padrao\r\n         */\r\n        get(target, name, receiver) {\r\n          return target[name] || '';\r\n        }\r\n\r\n      });\r\n  };\r\n\r\n});","Rex('topCategories', function ({ config }) {\r\n\r\n  /**\r\n   * Este servico lista as principais categorias\r\n   */\r\n  return async function () {\r\n    return new Proxy(\r\n      {\r\n        '@': await (await fetch(`${config.url}/service/v2/topCategories/${config.program}/${config.token}/BR/?format=json&sourceId=${config.source}`)).json(),\r\n        'subCategory': []\r\n      },\r\n      {\r\n\r\n        /**\r\n         * Quando nao encontrado um valor, sera forcecido o valor padrao\r\n         */\r\n        get(target, name, receiver) {\r\n          return target['@'][name] || target[name];\r\n        }\r\n\r\n      }\r\n    );\r\n  };\r\n\r\n});","Rex(function ({ atom, topCategories, ['category.template']: template }) {\r\n\r\n  /**\r\n   * Monta a lista das melhores Categorias, que esta sendo\r\n   * utilizado na pagina de index\r\n   */\r\n  @atom.component('widgets-categories', 'dl')\r\n  class Categories {\r\n\r\n    /**\r\n     * Busca a lista de Categorias e mapeia cada item por um template com\r\n     * seus valores correspondente\r\n     */\r\n    @atom.attached\r\n    async render() {\r\n      this.innerHTML = (await topCategories()).subCategory.map(template).join('');\r\n    }\r\n\r\n  }\r\n  \r\n});","Rex('category.template', function () {\r\n\r\n  /**\r\n   * Template de Categoria, que contem Nome da Categoria, um link para a\r\n   * listagem de todos os produtos da categoria e uma listagem com 6 produtos\r\n   * pertencentes a categoria\r\n   */\r\n  return function (data) {\r\n    return `\r\n      <dt class=\"category\">\r\n        <h2 class=\"category_title\">${ data.name }</h2>\r\n        <a class=\"category_more\" href=\"./search.html?keyword=${ data.name.replace(/(\\ )+/g, '+') }\">Ver todos</a>\r\n      </dt>\r\n      <dd class=\"products\">\r\n        <ul is=\"widgets-producties\" category=\"${ data.id }\" results=\"6\">\r\n        </ul>\r\n      </dd>\r\n    `;\r\n  };\r\n\r\n});","Rex('product.template', function () {\r\n\r\n  /**\r\n   * Template do card para um produto, com imagem, nome e valor mais\r\n   * barato\r\n   */\r\n  return function (data) {\r\n    return `\r\n     <li class=\"products_item\">\r\n        <a class=\"products_link\" href=\"\">\r\n          <figure>\r\n            <img class=\"products_img\" src=\"${ data.product.thumbnail.url }\">\r\n            <figcaption>\r\n              <span class=\"product_name\">${ data.product.productname }</span>\r\n              <span class=\"products_price\">R$ ${ data.product.pricemin }</span>\r\n            </figcaption>\r\n          </figure>\r\n        </a>\r\n      </li>\r\n    `;\r\n  };\r\n\r\n});","Rex(function ({ atom, findProductList, ['producties.state']: state, ['product.template']: template }) {\r\n\r\n  /**\r\n   * Widget com listagem de produtos, que esta sendo utilizado na tela\r\n   * de search\r\n   */\r\n  @atom.component('widgets-producties', 'ul')\r\n  class Categories {\r\n\r\n    /**\r\n     * Busca a lista de produtos, referente ao estado do widgets\r\n     * que sao categoryId e result, mapeando cada produto pelo template de produto\r\n     * para montar o html final\r\n     */\r\n    @atom.attached\r\n    async render() {\r\n      this.innerHTML = (await findProductList(state(this))).product.map(template).join('');\r\n    }\r\n\r\n  }\r\n  \r\n});","Rex('producties.state', function () {\r\n\r\n  /**\r\n   * Estado do widgets Product, separando a responsabilida de consulta\r\n   * dos valores de propriedade evitando a poluicao do codigo\r\n   */\r\n  return function (el) {\r\n    return {\r\n\r\n      /**\r\n       * Numero da categoria de produtos, este valor existira quando o\r\n       * usuario clicar no botao de Ver mais\r\n       */\r\n      get categoryId() {\r\n        return el.getAttribute('category') || '';\r\n      },\r\n\r\n      /**\r\n       * Numero de resultado quer serao retornado do API\r\n       */\r\n      get results() {\r\n        return el.getAttribute('results') || ''; \r\n      }\r\n\r\n    };\r\n  };\r\n\r\n});","Rex(function ({ atom, memoize, queryString, ['search.state']: state }) {\r\n\r\n  /**\r\n   * Widget de search, responsavel por redirecionar para a pagina de search e por\r\n   * atualizar o valor da query string keyword para o imput\r\n   */\r\n  @atom.component('widgets-search', 'form')\r\n  class Search {\r\n\r\n    /**\r\n     * Reflete o valor da query String para o input do component\r\n     */\r\n    @atom.attached\r\n    dataBind() {\r\n      return state(this).input = queryString().keyword.replace(/\\+/g, ' '), this;\r\n    }\r\n\r\n  }\r\n\r\n});","Rex('search.state', function () {\r\n\r\n  /**\r\n   * Estado do widgets Search, separando a responsabilida de consulta\r\n   * dos valores de propriedade evitando a poluicao do codigo\r\n   */\r\n  return function (el) {\r\n    return {\r\n\r\n      /**\r\n       * Seta um novo valor para o input\r\n       */\r\n      set input(value) {\r\n        return el.querySelector('input').value = value;\r\n      }\r\n\r\n    };\r\n  };\r\n\r\n});"]}