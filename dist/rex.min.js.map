{"version":3,"sources":["rex.js","helpers/always/always.js","helpers/apply/apply.js","helpers/cond/cond.js","helpers/contains/contains.js","helpers/guid/guid.js","services/radio/emit.js","services/radio/handlers.js","services/radio/proxy.js","services/radio/radio.js","services/storage/drop.js","services/storage/get.js","services/storage/remove.js","services/storage/set.js","services/storage/storage.js","wrappers/arity/arity.js","wrappers/atom/atom.js","wrappers/atom/attached.js","wrappers/atom/change.js","wrappers/atom/component.js","wrappers/atom/created.js","wrappers/atom/detached.js","wrappers/atom/event.js","wrappers/curry/completed.js","wrappers/curry/curry.js","wrappers/curry/mapper.js","wrappers/curry/template.js","wrappers/curry/_.js","wrappers/flip/flip.js","wrappers/hook/after.js","wrappers/hook/before.js","wrappers/hook/hook.js","wrappers/memoize/decorate.js","wrappers/memoize/memoize.js","wrappers/memoize/wrapper.js","wrappers/overload/overload.js","wrappers/partial/partial.js"],"names":["modules","proxy","window","Rex","nameOrModule","module","push","onload","forEach","Proxy","get","target","name","receiver","value","args","apply","chain","index","length","curry","test","indexOf","Math","round","Date","now","random","toString","radio","handlers","emit","channel","entries","context","JSON","parse","stringify","Map","set","Set","drop","clear","off","delete","on","add","storage","localStorage","key","defaultValue","getItem","remove","removeItem","is","Object","prototype","call","setItem","a","b","c","d","atom","hook","attached","prop","descriptor","hookCallback","setImmediate","bind","after","contains","change","properties","oldValue","newValue","before","component","tagName","extending","document","registerElement","create","HTMLElement","created","detached","event","query","bubbling","action","e","matches","hookCreatedCallback","addEventListener","hookDetachedCallback","removeEventListener","_","completed","mapper","template","partial","predicate","feed","splice","Number","MAX_VALUE","map","item","Array","split","guid","reverse","always","memoize","method","arguments","flip","decorate","wrapper","taraget","overrid"],"mappings":"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","file":"rex.min.js","sourcesContent":["(function (modules, proxy) {\r\n\r\n  /**\r\n   * Extendo o objeto window, com o modulo 'Rex' e subscrevo\r\n   * o evento onload\r\n   */\r\n  Object.assign(window, {\r\n\r\n    /**\r\n     * Principal Funcao responsavel por registrar e consumir\r\n     * Modulos, utilizando-se da sobrecarga\r\n     */\r\n    Rex(nameOrModule, module) {\r\n      module ? (proxy[nameOrModule] = module) : modules.push(nameOrModule);\r\n    },\r\n\r\n    /**\r\n     * Inicializacao dos Modulos aguarda o evento onload, permitindo\r\n     * hoisting dos Modulos registrado\r\n     */\r\n    onload() {\r\n      modules.forEach(module => module(proxy));\r\n    }\r\n\r\n  });\r\n\r\n/**\r\n * Inicializa o Modulo passando como parametro, um Array Literal e\r\n * um Proxy que faz todo o trabalho de Injecao de Dependencia\r\n */\r\n})([], new Proxy({ '@': {} }, {\r\n  \r\n  /**\r\n   * Intermedeia as chamadas dos Modulos, memoizando o retorno da Funcao\r\n   * construtora\r\n   */\r\n  get(target, name, receiver) {\r\n    return target['@'][name] || (target['@'][name] = target[name](receiver));\r\n  }\r\n  \r\n}));","Rex('always', () =>\r\n\r\n  /**\r\n   * Sempre retorna o mesmo valor quando a funcao de\r\n   * retorno for executado\r\n   */\r\n  (value) =>\r\n    () => value);","Rex('apply', () =>\r\n\r\n  /**\r\n   * Executa a funcao passando os parametros\r\n   * subsequentes\r\n   */\r\n  function (target, ...args) {\r\n    return target.apply(this, args); });","Rex('cond', function () {\r\n\r\n  return function (...chain) {\r\n    return function (...args) {\r\n\r\n      let index = -1;\r\n\r\n      while(++index < chain.length) {\r\n        if(chain[index][0](...args)) return chain[index][1](...args);\r\n      }\r\n\r\n    };\r\n  };\r\n\r\n});","Rex('contains', ({ curry }) =>\r\n\r\n  /**\r\n   * Este modulo verifica a existencia de um valor\r\n   * dentro de uma colecao\r\n   */\r\n  curry((value, target) =>\r\n    !/\\-1/.test(target.indexOf(value))));","Rex('guid', () =>\r\n\r\n  /**\r\n   * Este module cria um valor unico a todo momento que\r\n   * for chamado\r\n   */\r\n  () =>\r\n    Math.round(Date.now() * Math.random()).toString(36));","Rex(function ({ radio, ['radio.handlers']: handlers }) {\r\n\r\n  /**\r\n   * Estende a class radio com o metodo statico emit\r\n   */\r\n  Object.assign(radio, {\r\n\r\n    /**\r\n     * Emite uma transmissao em um canal especifico, para todos os contextos, repassando\r\n     * uma copia do que foi passado na transmissao\r\n     */\r\n    emit(channel, ...args) {\r\n      for (let [context, proxy] of handlers.entries())\r\n        for (let target of proxy[channel]) target.apply(context, JSON.parse(JSON.stringify(args)));\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n});","Rex('radio.handlers', () =>\r\n\r\n  /**\r\n   * Mapa para guardar todos os contexto, que deposi sera muito\r\n   * facil para realizar o metodo drop\r\n   */\r\n  new Map);","Rex('radio.proxy', function ({ ['radio.handlers']: handlers }) {\r\n\r\n  /**\r\n   * Conjultando o contexto com um Proxy, quey ira armazenar os\r\n   * canais\r\n   */\r\n  return function (context) {\r\n    handlers.set(context, new Proxy({}, {\r\n\r\n      /**\r\n       * Se um canal ainda nao existir, sera criado o canal e atribuido\r\n       * um novo Set\r\n       */\r\n      get(target, name) {\r\n        return target[name] || (target[name] = new Set);\r\n      }\r\n\r\n    }));\r\n  };\r\n\r\n});","Rex('radio', function ({ ['radio.handlers']: handlers, ['radio.proxy']: proxy }) {\r\n\r\n  /**\r\n   * Uma classe da forma tradicionar, desta forna nao sera\r\n   * preciso do operado new para instanciar\r\n   */\r\n  return function radio(context) {\r\n\r\n    /**\r\n     * Para utilizarmos o new em todas as refencias, forço de\r\n     * forma transparente a criacao de uma nova instancia\r\n     */\r\n    if (!(this instanceof radio)) {\r\n      return new radio(context);\r\n    }\r\n\r\n    /**\r\n     * Conjultando o contexto com um Proxy, quey ira armazenar os\r\n     * canais\r\n     */\r\n    proxy(context);\r\n\r\n    /**\r\n     * Desliga todas as escultas\r\n     */\r\n    function drop() {\r\n      return handlers.get(context).clear(), this;\r\n    }\r\n\r\n    /**\r\n     * Localiza dentro do Map o canal pelo contexto conjulgado\r\n     */\r\n    function get(channel) {\r\n      return handlers.get(context)[channel];\r\n    }\r\n\r\n    /**\r\n     * Desliga a esculta de uma transmissao especifica\r\n     */\r\n    function off(channel, target) {\r\n      return get(channel).delete(target), this;\r\n    }\r\n\r\n    /**\r\n     * Liga a esculta para uma transmissao especifica\r\n     */\r\n    function on(channel, target) {\r\n      return get(channel).add(target), this;\r\n    }\r\n\r\n    /**\r\n     * Pattern revelation\r\n     */\r\n    return { drop, off, on };\r\n\r\n  };\r\n\r\n});","Rex(function ({ storage }) {\r\n\r\n  /**\r\n   * Extensao do modulo Storage, incluindo o metodo drop que limpa\r\n   * todas as chaves com seu valores\r\n   */\r\n  Object.assign(storage, {\r\n    drop() {\r\n\r\n      /**\r\n       * Limpa as chaves -> valores, posteriormente retornando o\r\n       * proprio objeto Storage\r\n       */\r\n      return localStorage.clear(), storage;\r\n\r\n    }\r\n  });\r\n\r\n});","Rex(function ({ storage }) {\r\n\r\n  /**\r\n   * Extensao do modulo Storage, incluindo o metodo get devolve o valor\r\n   * pela chave fornecido\r\n   */\r\n  Object.assign(storage, {\r\n    get(key, defaultValue = null) {\r\n\r\n      /**\r\n       * Parseia o valor caso ele seja um Objeto ou uma Colecao, caso contrario\r\n       * devolve o proprio valor, por padrao o valor sera uma Literal\r\n       */\r\n      function parse(value) {\r\n        return /^(\\{|\\[).+(\\]|\\})$/.test(value) ? JSON.parse(value) : value;\r\n      }\r\n\r\n      /**\r\n       * Devolve o valor referente a chave que fora passado, caso nao\r\n       * encontrado o valor devolve o valor padrao\r\n       */\r\n      return parse(localStorage.getItem(key)) || defaultValue;\r\n\r\n    }\r\n  });\r\n\r\n});","Rex(function ({ storage }) {\r\n\r\n  /**\r\n   * Extensao do modulo Storage, incluindo o metodo remove a chave\r\n   */\r\n  Object.assign(storage, {\r\n    remove(key) {\r\n\r\n      /**\r\n       * Exlusao da chave e devolve a referencia do Storage\r\n       */\r\n      return localStorage.removeItem(key), storage;\r\n\r\n    }\r\n  });\r\n\r\n});","Rex(function ({ storage }) {\r\n\r\n  /**\r\n   * Extensao do modulo Storage, incluindo o metodo set cria e/ou altera o valor\r\n   * pela chave forcecia\r\n   */\r\n  Object.assign(storage, {\r\n    set(key, value = null) {\r\n\r\n      /**\r\n       * Verifica se o valor fornecido é um Objeto ou Array, para executar\r\n       * o parse para Literal antes de ser armazenado evitando erros ou referencia\r\n       */\r\n      function is(value) {\r\n        return /(object|array)\\]$/i.test(Object.prototype.toString.call(value));\r\n      }\r\n\r\n      /**\r\n       * Cria e/ou altera o valor da chave e devolve a referencia do Storage\r\n       */\r\n      return localStorage.setItem(key, is(value) ? JSON.stringify(value) : value), storage;\r\n\r\n    }\r\n  });\r\n\r\n});","Rex('storage', () =>\r\n\r\n  /**\r\n   * Um micro Base de Dados com persistencia de sessao, que trabalha\r\n   * com chave -> valor\r\n   */\r\n  ({}));","Rex('arity', ({ apply, curry }) =>\r\n\r\n  /**\r\n   * Altera a assinatura da quantidades de parametros\r\n   * que a funcao alvo possui\r\n   */\r\n  curry((length, target) =>\r\n    (...args) =>\r\n      ({\r\n          '0': function ()            { return curry(target, ...args); }\r\n        , '1': function (a)           { return curry(target, ...args); }\r\n        , '2': function (a, b)        { return curry(target, ...args); }\r\n        , '3': function (a, b, c)     { return curry(target, ...args); }\r\n        , '4': function (a, b, c, d)  { return curry(target, ...args); }\r\n      })[length]));","Rex('atom', () =>\r\n\r\n  /**\r\n   * Modulo com decoradores de classes que auxiliam na criacao do\r\n   * component customizado\r\n   */\r\n  ({}));","Rex(function ({ atom, hook }) {\r\n\r\n  /**\r\n   * Extensao do modulo atom, decorador attached executa um metodo\r\n   * quando o Web Component for apendado no DOM\r\n   */\r\n  Object.assign(atom, {\r\n    attached(target, prop, descriptor) {\r\n\r\n      /**\r\n       * Hook que executara o metodo apontado no decorador no evento\r\n       * de attachedCallback\r\n       */\r\n      function hookCallback() {\r\n        setImmediate(this[prop].bind(this));\r\n      }\r\n\r\n      /**\r\n       * Troca o metodo attachedCallbac pelo hookCallback que fara o \r\n       * disparo para o metodo apontotado no decorador no momento em que\r\n       * o Web Component for atachado no DOM\r\n       */\r\n      hook.after(target, 'attachedCallback', hookCallback);\r\n\r\n      /**\r\n       * Retorna o descriptor sem nenhuma modificacao\r\n       */\r\n      return descriptor;\r\n\r\n    }\r\n  });\r\n\r\n});","Rex(function ({ atom, contains, hook }) {\r\n\r\n  /**\r\n   * Extensao do modulo atom, o decorador change notifica o metodo\r\n   * decorado quando o atributo identificado for alterado\r\n   */\r\n  Object.assign(atom, {\r\n    change(...properties) {\r\n      return function (target, prop, descriptor) {\r\n\r\n        /**\r\n         * Notifica o metodo que fora decorado, para receber o novo valor da\r\n         * propriedade alterado\r\n         */\r\n        function hookCallback(name, oldValue, newValue) {\r\n          contains(name, properties) && (this[prop](newValue, oldValue, name));\r\n        }\r\n\r\n        /**\r\n         * Altera o metodo attributeChangedCallback para incluir o hook, no momento\r\n         * que este metodo for chamado, sera repassado para o metodo que fora decorado\r\n         */\r\n        hook.before(target, 'attributeChangedCallback', hookCallback);\r\n\r\n        /**\r\n         * Retorna o descriptor sem nenhuma modificacao\r\n         */\r\n        return descriptor;\r\n\r\n      };\r\n    }\r\n  });\r\n\r\n});","Rex(function ({ atom }) {\r\n\r\n  /**\r\n   * Extensao do modulo atom, o decorador componente cria um componente\r\n   * como o nome da tag quer fora passado\r\n   */\r\n\tObject.assign(atom, {\r\n    component(tagName, extending) {\r\n      return function (target) {\r\n\r\n        /**\r\n         * Cria um novo Web Components customizado, desde que o nome da tag tenha\r\n         * um hifen e que este nome ja nao foi registrado\r\n         */\r\n      \tdocument.registerElement(tagName, {\r\n          prototype: Object.assign(Object.create(HTMLElement.prototype), target.prototype),\r\n          [extending ? 'extends' : '']: extending\r\n        });\r\n\r\n      };\r\n    }\r\n  });\r\n\r\n});","Rex(function ({ atom, hook }) {\r\n\r\n  /**\r\n   * Extensao do modulo atom, funciona com um constructor;\r\n   * Decorador created executa um metodo quando o Web Component for\r\n   * criado, antes de ser apendado no DOM\r\n   */\r\n  Object.assign(atom, {\r\n    created(target, prop, descriptor) {\r\n\r\n      /**\r\n       * Hook que executara o metodo apontado no decorador no evento\r\n       * de createdCallback\r\n       */\r\n      function hookCallback() {\r\n        setImmediate(this[prop].bind(this));\r\n      }\r\n\r\n      /**\r\n       * Troca o metodo createdCallbac pelo hookCallback que fara o \r\n       * disparo para o metodo apontotado no decorador no momento em que\r\n       * o Web Component for criado\r\n       */\r\n      hook.after(target, 'createdCallback', hookCallback);\r\n\r\n      /**\r\n       * Retorna o descriptor sem nenhuma modificacao\r\n       */\r\n      return descriptor;\r\n\r\n    }\r\n  });\r\n\r\n});","Rex(function ({ atom, hook }) {\r\n\r\n  /**\r\n   * Extensao do modulo atom, funciona como um deconstructor;\r\n   * Decorador detached executa um metodo quando o Web Component\r\n   * for retirado do DOM\r\n   */\r\n  Object.assign(atom, {\r\n    detached(target, prop, descriptor) {\r\n\r\n      /**\r\n       * Hook que executara o metodo apontado no decorador no evento\r\n       * de detachedCallback\r\n       */\r\n      function hookCallback() {\r\n        this[prop]();\r\n      }\r\n\r\n      /**\r\n       * Troca o metodo detachedCallbac pelo hookCallback que fara o \r\n       * disparo para o metodo apontotado no decorador no momento em que\r\n       * o Web Component for retirado do DOM\r\n       */\r\n      hook.after(target, 'detachedCallback', hookCallback);\r\n\r\n      /**\r\n       * Retorna o descriptor sem nenhuma modificacao\r\n       */\r\n      return descriptor;\r\n\r\n    }\r\n  });\r\n\r\n});","Rex(function ({ atom, hook }) {\r\n\r\n  /**\r\n   * Extensao do modulo atom, executa os metodo apontoado no decorado que\r\n   * indica o evento de interesse que atenda a query de selecao\r\n   */\r\n  Object.assign(atom, {\r\n    event(event, query = '*', bubbling) {\r\n      return function (target, prop, descriptor) {\r\n\r\n        /**\r\n         * Executa o metodo hook quey foi decorado pelo decorador\r\n         * event\r\n         */\r\n        function action(e) {\r\n          e.target.matches(query) && this[prop](e);\r\n        }\r\n\r\n        /** \r\n         * Quando o evento createdCallback for disparado, sera adicionado\r\n         * o evento que fora informado no decorator\r\n         */\r\n        function hookCreatedCallback() {\r\n          this.addEventListener(event, action.bind(this), bubbling);\r\n        }\r\n\r\n        /** \r\n         * Quando o evento detachedCallback for disparado, sera removido\r\n         * o evento que fora informado no decorator\r\n         */\r\n        function hookDetachedCallback() {\r\n          this.removeEventListener(event, action.bind(this), bubbling);\r\n        }\r\n\r\n        /**\r\n         * Adiciona um hook no metodo createdCallbac pelo hookCreatedCallback \r\n         */\r\n        hook.after(target, 'createdCallback', hookCreatedCallback);\r\n\r\n        /**\r\n         * Adiciona um hook no metodo detachedCallbac pelo hookDetachedCallback \r\n         */\r\n        hook.after(target, 'detachedCallback', hookDetachedCallback);\r\n\r\n        /**\r\n         * Retorna o descriptor sem nenhuma modificacao\r\n         */\r\n        return descriptor;\r\n\r\n      };\r\n    }\r\n  });\r\n\r\n});","Rex('curry.completed', ({ _ }) =>\r\n\r\n  /**\r\n   * Verifica se todos os parametros foram passado\r\n   * para entao poder executar a funcao predicada\r\n   */\r\n  (target) =>\r\n    /-1/.test(target.indexOf(_)));","Rex('curry', ({ ['curry.completed']: completed, ['curry.mapper']: mapper, ['curry.template']: template, partial }) =>\r\n\r\n  /**\r\n   * Retorna uma funcao equivalente que seus argumentos nao necessitan\r\n   * de ser fornecida uma de cada vez\r\n   */\r\n  (predicate) =>\r\n    partial(function curry(feed, ...args) {\r\n      return mapper(feed, args), completed(feed) ? predicate(...feed) : partial(curry, feed); }, template(predicate)));","Rex('curry.mapper', ({ _ }) =>\r\n\r\n  /**\r\n   * Mapeia uma colecao, substituindo todos os elementos baseado no index\r\n   * de sua localizacao pelo seu correspondente\r\n   */\r\n  (feed, args = [], index = 0) =>\r\n    feed.splice(0, Number.MAX_VALUE, ...feed.map(item => (item == _) ? (args[index++] || _) : item)));","Rex('curry.template', ({ _ }) =>\r\n\r\n  /**\r\n   * Monta um gabarito para mapear os parametros\r\n   * fornecidos nas chamadas assincronas\r\n   */\r\n  (predicate) =>\r\n    Array(predicate.length).toString().split(',').map(() => _));","Rex('_', ({ guid }) =>\r\n\r\n  /**\r\n   * Utilizado para indicar um gap na ordems\r\n   * dos parametros que estao sendo passados na chamada\r\n   * da funcao\r\n   */\r\n  guid());","Rex('flip', ({ apply }) =>\r\n\r\n  /**\r\n   * Este modulo inverte a ordem dos pararametro e repassando para o\r\n   * predicate encapsulado\r\n   */\r\n  (predicate) =>\r\n\r\n    /**\r\n     * Rece os argumentos atraves do parametro ...args onde sera\r\n     * frito a inversao desses valores sendo aplicado no predicado\r\n     */\r\n    (...args) =>\r\n      apply(predicate, ...args.reverse()));","Rex(function ({ always, hook, memoize }) {\r\n\r\n  /**\r\n   * Extensao do modulo Hook, inclusao da funcao after, que\r\n   * executara apos a execao da funcao indicada\r\n   */\r\n  Object.assign(hook, {\r\n    after: function (target, prop, predicate) {\r\n\r\n      (function (method) {\r\n\r\n        /**\r\n         * Sobrescreve o predicator horiginal trocando pelo hook, apos a execucao\r\n         * do predicate horiginal sera passa o retorno para o hook que tambem\r\n         * devera retornar o valo\r\n         */\r\n        Object.assign(target, {\r\n        \t[prop]() {\r\n            return predicate.apply(this, method.apply(this, arguments)), method.apply(this, arguments);\r\n        \t}\r\n        });\r\n      \r\n      /**\r\n       * Passando como parametro a funcao/metodo que tera o hook, caso\r\n       * a funcao nao exista sera passado um stub\r\n       */\r\n      })(memoize(target[prop] || always()));\r\n\r\n      ;\r\n\r\n    }\r\n  });\r\n\r\n});","Rex(function ({ hook }) {\r\n\r\n  /**\r\n   * Extensao do modulo Hook, inclusao da funcao before, que\r\n   * executara apos a execao da funcao indicada\r\n   */\r\n  Object.assign(hook, {\r\n    before: function (target, prop, predicate) {\r\n\r\n      (function (method) {\r\n\r\n        /**\r\n         * Sobrescreve o predicator horiginal trocando pelo hook, sera executado\r\n         * antes que recebera todos os parametros adicionado o predicate horiginal no\r\n         * final dos argumentos\r\n         */\r\n        Object.assign(target, {\r\n        \t[prop]() {\r\n            return predicate.apply(this, arguments), method.apply(this, arguments);\r\n        \t}\r\n        });\r\n      \r\n      /**\r\n       * Passando como parametro a funcao/metodo que tera o hook, caso\r\n       * a funcao nao exista sera passado um stub\r\n       */\r\n      })(target[prop]);\r\n\r\n    }\r\n  });\r\n\r\n});","Rex('hook', () =>\r\n\r\n  /**\r\n   * Hooks que seram executados antes e/ou depois da execucao\r\n   * da funcao indicada\r\n   */\r\n  ({}));","Rex('memoize.decorate', function ({ apply, flip, hook }) {\r\n\r\n  /**\r\n   * Este docorador tem a responsabilidade de cachear o retorno do\r\n   * metodo, evitando que o metodo horiginal seja executado em chamadas\r\n   * sequentes\r\n   */\r\n  return function (target, key, descriptor) {\r\n\r\n    /**\r\n     * Hook que verifica se o metodo alvo ja fora chamado, retornando\r\n     * o valor cacheado\r\n     */\r\n    function hookCallback(method, ...args) {\r\n      return this[`@${args}`] || (this[`@${args}`] = apply(method, ...args));\r\n    }\r\n\r\n    /**\r\n     * Encapsula o metodo horiginal pelo hookCallback\r\n     */\r\n    hook.before(descriptor, 'value', flip(hookCallback));\r\n\r\n    /**\r\n     * Retorna o descriptor com o metodo alvo alterado\r\n     * pela funcao hookCallback\r\n     */\r\n    return descriptor;\r\n    \r\n  }\r\n\r\n});","Rex('memoize', function ({ ['memoize.decorate']: decorate, ['memoize.wrapper']: wrapper }) {\r\n\r\n  /**\r\n   * Cacheia o retorno da funcao/metodo, evitando que a execucao do predicado\r\n   * seja executado em chamadas futuras\r\n   */\r\n  return function () {\r\n    return { '1': wrapper, '3': decorate }[arguments.length].apply(this, arguments);\r\n  };\r\n\r\n});","Rex('memoize.wrapper', function ({ flip, hook }) {\r\n\r\n  /**\r\n   * Este wrapper tem a responsabilidade de cachear o retorno do\r\n   * metodo, evitando que o metodo horiginal seja executado em chamadas\r\n   * sequentes\r\n   */\r\n  return function (target) {\r\n    return function () {\r\n      return target[`@${arguments}`] || (target[`@${arguments}`] = target.apply(this, arguments));\r\n    };\r\n  };\r\n\r\n});","Rex('overload', function ({ apply }) {\r\n\r\n  /**\r\n   * Modulo olverload é uma sobre carga de metodos, pela\r\n   * quantidades de paremetros e nao pelo tipo de dados como em\r\n   * linguagens que com tipagem de dados\r\n   */\r\n  return function (taraget, key, overrid) {\r\n    (function (method) {\r\n\r\n      /**\r\n       * Se a quantidade de items passados em arguments for correspondente\r\n       * com o tamanho do overrid entao sera executado, caso contrario sera executado\r\n       * o metodo que fora sobre carregado\r\n       */\r\n      Object.assign(taraget, {\r\n        [key]() {\r\n          return apply((overrid.length == arguments.length ? overrid : method), arguments);\r\n        }\r\n      });\r\n\r\n    })(taraget[key]);\r\n  };\r\n\r\n});","Rex('partial', () =>\r\n\r\n  /**\r\n   * Aplica os parametros na mesma sequencia, sem a\r\n   * execucao da funcao\r\n   */\r\n  (predicate, ...args) =>\r\n      predicate.bind(predicate, ...args));"]}