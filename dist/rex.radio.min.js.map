{"version":3,"sources":["emit.js","handlers.js","radio.js"],"names":["Rex","_ref","radio","handlers","_extends","emit","channel","_len","arguments","length","args","Array","_key","_iterator","entries","_isArray","isArray","_i","Symbol","iterator","_ref4","next","done","value","_ref2","_ref3","_slicedToArray","context","proxy","_iterator2","_isArray2","_i2","_ref5","apply","JSON","parse","stringify","this","Map","drop","get","clear","off","target","delete","on","add","set","Proxy","name","Set"],"mappings":"grBAAAA,KAAI,SAAAC,GAAmD,GAAvCC,GAAuCD,EAAvCC,MAA2BC,EAAYF,EAA/B,iBAKtBG,UAAcF,GAMZG,KANmB,SAMdC,GAAkB,IAAA,GAAAC,GAAAC,UAAAC,OAANC,EAAMC,MAAAJ,EAAA,EAAAA,EAAA,EAAA,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,EAAA,GAAAJ,UAAAI,EACrB,KAAA,GAAAC,GAA6BV,EAASW,UAAtCC,EAAAJ,MAAAK,QAAAH,GAAAI,EAAA,EAAAJ,EAAAE,EAAAF,EAAAA,EAAA,kBAAAK,QAAAA,OAAAC,SAAA,kBAAA,CAAA,GAAAC,EAAA,IAAAL,EAAA,CAAA,GAAAE,GAAAJ,EAAAJ,OAAA,KAAAW,GAAAP,EAAAI,SAAA,CAAA,GAAAA,EAAAJ,EAAAQ,OAAAJ,EAAAK,KAAA,KAAAF,GAAAH,EAAAM,MACE,IAAA,GADFC,GAAAJ,EAAAK,EAAAC,eAAAF,EAAA,GAAUG,EAAVF,EAAA,GAAmBG,EAAnBH,EAAA,GACEI,EAAmBD,EAAMtB,GAAzBwB,EAAAnB,MAAAK,QAAAa,GAAAE,EAAA,EAAAF,EAAAC,EAAAD,EAAAA,EAAA,kBAAAX,QAAAA,OAAAC,SAAA,kBAAA,CAAA,GAAAa,EAAA,IAAAF,EAAA,CAAA,GAAAC,GAAAF,EAAApB,OAAA,KAAAuB,GAAAH,EAAAE,SAAA,CAAA,GAAAA,EAAAF,EAAAR,OAAAU,EAAAT,KAAA,KAAAU,GAAAD,EAAAR,MAAAS,EAA0CC,MAAMN,EAASO,KAAKC,MAAMD,KAAKE,UAAU1B,MACrF,MAAO2B,WCdbrC,IAAI,iBAAkB,WAAA,MAAM,IAAIsC,OCAhCtC,IAAI,QAAS,SAAAC,GAA4C,GAAZE,GAAYF,EAA/B,iBAExB,OAAO,SAASC,GAAMyB,GA6BpB,QAASY,KACP,MAAOpC,GAASqC,IAAIb,GAASc,QAASJ,KAMxC,QAASG,GAAIlC,GACX,MAAOH,GAASqC,IAAIb,GAASrB,GAM/B,QAASoC,GAAIpC,EAASqC,GACpB,MAAOH,GAAIlC,GAASsC,OAAOD,GAASN,KAMtC,QAASQ,GAAGvC,EAASqC,GACnB,MAAOH,GAAIlC,GAASwC,IAAIH,GAASN,KA7CnC,MAAMA,gBAAgBnC,IAQtBC,EAAS4C,IAAIpB,EAAS,GAAIqB,WAMxBR,IANkC,SAM9BG,EAAQM,GACV,MAAON,GAAOM,KAAUN,EAAOM,GAAQ,GAAIC,WAoCtCX,KAAAA,EAAMG,IAAAA,EAAKG,GAAAA,IAlDX,GAAI3C,GAAMyB","file":"rex.radio.min.js","sourcesContent":["Rex(function ({ radio, ['radio.handlers']: handlers }) {\r\n\r\n  /**\r\n   * Estende a class radio com o metodo statico emit\r\n   */\r\n  Object.assign(radio, {\r\n\r\n    /**\r\n     * Emite uma transmissao em um canal especifico, para todos os contextos, repassando\r\n     * uma copia do que foi passado na transmissao\r\n     */\r\n    emit(channel, ...args) {\r\n      for (let [context, proxy] of handlers.entries())\r\n        for (let target of proxy[channel]) target.apply(context, JSON.parse(JSON.stringify(args)));\r\n      return this;\r\n    }\r\n\r\n  });\r\n\r\n});","Rex('radio.handlers', () => new Map);","Rex('radio', function ({ ['radio.handlers']: handlers }) {\r\n\r\n  return function radio(context) {\r\n\r\n    /**\r\n     * Para utilizarmos o new em todas as refencias, for√ßo de\r\n     * forma transparente a criacao de uma nova instancia\r\n     */\r\n    if (!(this instanceof radio)) {\r\n      return new radio(context);\r\n    }\r\n\r\n    /**\r\n     * Conjultando o contexto com um Proxy, quey ira armazenar os\r\n     * canais\r\n     */\r\n    handlers.set(context, new Proxy({}, {\r\n\r\n      /**\r\n       * Se um canal ainda nao existir, sera criado o canal e atribuido\r\n       * um novo Set\r\n       */\r\n      get(target, name) {\r\n        return target[name] || (target[name] = new Set);\r\n      }\r\n\r\n    }));\r\n\r\n    /**\r\n     * Desliga todas as escultas\r\n     */\r\n    function drop() {\r\n      return handlers.get(context).clear(), this;\r\n    }\r\n\r\n    /**\r\n     * Localiza dentro do Map o canal pelo contexto conjulgado\r\n     */\r\n    function get(channel) {\r\n      return handlers.get(context)[channel];\r\n    }\r\n\r\n    /**\r\n     * Desliga a esculta de uma transmissao especifica\r\n     */\r\n    function off(channel, target) {\r\n      return get(channel).delete(target), this;\r\n    }\r\n\r\n    /**\r\n     * Liga a esculta para uma transmissao especifica\r\n     */\r\n    function on(channel, target) {\r\n      return get(channel).add(target), this;\r\n    }\r\n\r\n    /**\r\n     * Pattern revelation\r\n     */\r\n    return { drop, off, on };\r\n\r\n  };\r\n\r\n});"]}